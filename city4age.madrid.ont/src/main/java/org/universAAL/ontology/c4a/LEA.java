package org.universAAL.ontology.c4a;

import javax.xml.datatype.XMLGregorianCalendar;

import org.universAAL.middleware.service.owl.Service;


/**
 * Ontological representation of LEA in the c4a ontology. 
 * Methods included in this class are the mandatory ones for representing an
 * ontological concept in Java classes for the universAAL platform. In addition
 * getters and setters for properties are included.
 * 
 * @author 
 * @author Generated by the OntologyUML2Java transformation of AAL Studio
 */
public class LEA extends Service {
  public static final String MY_URI = C4aOntology.NAMESPACE
    + "LEA";
  public static final String PROP_L_E_A_PHASE = C4aOntology.NAMESPACE
    + "lEA_phase";
  public static final String PROP_TIMESTAMP = C4aOntology.NAMESPACE
    + "timestamp";


  public LEA () {
    super();
  }
  
  public LEA (String uri) {
    super(uri);
  }

  public String getClassURI() {
    return MY_URI;
  }
  
  public int getPropSerializationType(String propURI) {
    if (PROP_L_E_A_PHASE.equals(propURI))
      return PROP_SERIALIZATION_FULL;
    if (PROP_TIMESTAMP.equals(propURI))
      return PROP_SERIALIZATION_FULL;
    return super.getPropSerializationType(propURI);
  } 

  public boolean isWellFormed() {
	return super.isWellFormed() 
      && hasProperty(PROP_L_E_A_PHASE)
      && hasProperty(PROP_TIMESTAMP);
  }

  public LEA_phase getLEA_phase() {
    return (LEA_phase)getProperty(PROP_L_E_A_PHASE);
  }		

  public void setLEA_phase(LEA_phase newPropValue) {
    if (newPropValue != null)
      changeProperty(PROP_L_E_A_PHASE, newPropValue);
  }		

  public XMLGregorianCalendar getTimestamp() {
    return (XMLGregorianCalendar)getProperty(PROP_TIMESTAMP);
  }		

  public void setTimestamp(XMLGregorianCalendar newPropValue) {
    if (newPropValue != null)
      changeProperty(PROP_TIMESTAMP, newPropValue);
  }		

}
